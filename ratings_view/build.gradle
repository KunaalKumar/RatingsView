apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'
apply plugin: "org.jetbrains.dokka"

def versionIdentifier = "0.0.8"

android {
    compileSdkVersion 29
    buildToolsVersion "30.0.1"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 8
        versionName versionIdentifier
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dokkaGfm {
    outputDirectory = "../docs/"
}

dokkaHtml {
    outputDirectory = "../docs/"
    // Used for disabling auto extraction of sources and platforms
    // When set to true kotlinTasks are also omitted
    disableAutoconfiguration = false

    // Use default or set to custom path to cache directory
    // to enable package-list caching
    // When this is set to default, caches are stored in $USER_HOME/.cache/dokka
    cacheRoot = "default"
    dokkaSourceSets {
        configureEach {

            // Use to include or exclude non public members
            includeNonPublic = false

            // Do not output deprecated members. Applies globally, can be overridden by packageOptions
            skipDeprecated = false

            // Emit warnings about not documented members. Applies globally, also can be overridden by packageOptions
            reportUndocumented = false

            // Do not create index pages for empty packages
            skipEmptyPackages = true

            // Used for linking to JDK documentation
            jdkVersion = 8

            // Disable linking to online kotlin-stdlib documentation
            noStdlibLink = false

            // Disable linking to online JDK documentation
            noJdkLink = false

            // Disable linking to online Android documentation (only applicable for Android projects)
            noAndroidSdkLink = false
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

def libGroupId = 'dev.kunaal'
def libArtifactId = 'ratings_view'
def libDesc = 'An android custom view to show ratings'
def libLicenses = ['Apache-2.0']
def libVCSUrl = 'https://github.com/KunaalKumar/RatingsView.git'

task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier "sources"
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            groupId libGroupId
            artifactId libArtifactId
            version versionIdentifier
            artifact(sourceJar)
            artifact("$buildDir/outputs/aar/$libArtifactId-release.aar")
        }
    }
}

// Bintray config
Properties properties = new Properties()
def propertiesFile = project.rootProject.file("${System.properties['user.home']}/.gradle/gradle.properties")
if (propertiesFile.exists()) {
    properties.load(propertiesFile.newDataInputStream())
}

bintray {
    user = properties.getProperty("BINTREE_USERNAME")
    key = properties.getProperty("BINTREE_API_KEY")
    publications = ['MyPublication']
    publish = true
    pkg {
        repo = "ratings-view"
        name = "$libGroupId:$libArtifactId"
        desc = libDesc
        licenses = libLicenses
        vcsUrl = libVCSUrl
        version {
            name = versionIdentifier
            vcsTag = versionIdentifier
            released = new Date()
        }
    }
}